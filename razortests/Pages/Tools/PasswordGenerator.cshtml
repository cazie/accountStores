@page
@model GeneratePassword.Pages.PasswordGeneratorModel
@{
}
<div class="row">
    <div id="generate" class="col-3">
        <form method="post">
            <div class="my_container">
                <h2>Password Generator</h2>
                <div class="result__container">

                    <div id="result">
                        <label id="myInput">@Model.Generator.GeneratedPassword</label>


                    </div>



                    <div class="options">
                        <div class="option">
                            <label>Length</label>
                            <input type="number" asp-for="Generator.MaxLength" placeholder="Max len" min="8" max="20" value="@Model.Generator.MaxLength" />
                        </div>
                        <div class="option">
                            <label>Must Include Uppercase</label>
                            <input type="checkbox" asp-for="Generator.UseCaps">
                        </div>
                        <div class="option">
                            <label>Must Include Numbers</label>
                            <input type="checkbox" asp-for="Generator.UseNumbers">
                        </div>
                        <div class="option">
                            <label>Must Include Symbols</label>
                            <input type="checkbox" asp-for="Generator.UseSymb">
                        </div>
                    </div>



                </div>
            </div>

            <div>
                <button onclick="myFunction()" type="submit" class="btn btn-mycolor btn-lg px-4 me-md-2" asp-area="" asp-page="/PasswordGenerator">Generate</button>
            </div>
        </form>
    </div>

    <div class="col-9">
        <h5>Password Generator</h5>
        <p>Generate Strong Passwords</p>
        <p>the Code is stuctured in in several functions, pulling each character sector separately.</p>
        <p>Serveral approaches</p>
        <p>
            Can combine all character types BUT it is not always a guarnatee that a Cap, number or symbol will be selected. As the Randomization process does
            not distinguish whether to select a number, letter or symbol.
        </p>
        <p>Creating separate random results for each character sector ensures that at least 1 cap, symbol, number is selected</p>
        <p>If opt not to include the "Musts" means that these characters can still be in te result as the overall pool has ALL characters</p>
    </div>

</div>
<script>
    function myFunction() {
        /* Get the text field */
        var copyText = document.getElementById("myInput");

        /* Select the text field */
        copyText.select();
        copyText.setSelectionRange(0, 99); /* For mobile devices */

        /* Copy the text inside the text field */
        navigator.clipboard.writeText(copyText.value);

        /* Alert the copied text */

    }
</script>
